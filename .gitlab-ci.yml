stages:
  - build
  - test
  - deploy


build_linux:
  stage: build
  image: arwash.rdi:5000/lumos_openjdk:latest
  script:
    # fetch python prebuild binary and headers
    - mkdir -p /usr/include/python
    - scp -r ninja@turtle.rdi:/home/ninja/cpp_team/prebuilt/linux/python/include/* /usr/include/python
    - scp -r ninja@turtle.rdi:/home/ninja/cpp_team/prebuilt/linux/python /usr/bin/python

    # fetch swig
    - scp -r ninja@turtle.rdi:/home/ninja/cpp_team/prebuilt/linux/swig4/bin/swig4.0 /usr/bin
    - scp -r ninja@turtle.rdi:/home/ninja/cpp_team/prebuilt/linux/swig4/swig4.0 /usr/share/

    # Configure and build
    - cmake . -Bbuilds/linux -DPYTHON_LIBRARY=/usr/bin/python -DPYTHON_INCLUDE_DIR=/usr/include/python -DPYTHON_SDK=ON -DCSHARP_SDK=ON
    - cmake --build builds/linux --parallel $(nproc)
  artifacts:
    paths:
      - builds/linux

# run tests using the binary built before
cpp_test_linux:
  image: arwash.rdi:5000/lumos:latest
  stage: test
  tags:
    - docker
  script:
    - ./builds/linux/test/c++/main

# run tests using the binary built before
python_test_linux:
  image: arwash.rdi:5000/lumos:latest
  stage: test
  tags:
    - docker
  script:
    - python3 builds/linux/test/python/main.py

deploy:
  stage: deploy
  tags:
    - encryption
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  dependencies:
    - build_linux
  variables:                              
    DEPLOY_PATH: ninja@turtle.rdi:/home/ninja/cpp_team/training_plan/ContinuousDelivery/

  script:
    # Copy rbtree Python SDK
    - mkdir -p rbtree/linux/python
    - cp -t rbtree/linux/python builds/linux/wrappers/python/*.py builds/linux/wrappers/python/*.so builds/linux/wrappers/csharp/*.cxx

    # Copy rbtree C# SDK
    - mkdir -p rbtree/linux/csharp
    - cp -t rbtree/linux/csharp builds/linux/wrappers/csharp/*.cs builds/linux/wrappers/csharp/*.so builds/linux/wrappers/csharp/*.cxx

    # Pack and upload
    - zip -r rbtree.zip rbtree/*
    - scp rbtree.zip $DEPLOY_PATH